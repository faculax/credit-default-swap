server {
    listen 10000;
    server_name _;
    
    client_max_body_size 100M;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Root directory
    root /app;
    
    # Static files - serve directly, let Django handle 404s
    location /static/ {
        alias /app/static/;
        
        # Debugging headers
        add_header X-Static-Path $request_filename always;
        add_header X-Accel-Buffering no always;
        
        # Try file first, if not exist return 404 (nginx will handle)
        # Remove try_files with @django_static fallback for now
        expires 30d;
        add_header Cache-Control "public, immutable";
        
        # Directory listing for debugging
        autoindex on;
    }
    
    # Fallback to Django for static files (for development/missing files)
    location @django_static {
        proxy_pass http://127.0.0.1:3031;
        proxy_set_header Host $http_host;
    }
    
    # Media files
    location /media/ {
        alias /app/media/;
        try_files $uri $uri/ =404;
        expires 7d;
    }
    
    # Health check endpoint (executed directly, not proxied)
    location = /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Main application
    location / {
        proxy_pass http://127.0.0.1:3031;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        proxy_redirect off;
        
        # Pass through all headers for CSRF
        proxy_pass_request_headers on;
        
        # WebSocket support (for Django Channels if needed)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}