# SonarQube Project Configuration for CDS Backend Service
# Project identification
sonar.projectKey=ayodeleoladeji_credit-default-swap-backend
sonar.projectName=CDS Platform - Backend Service
sonar.projectVersion=1.0.0
sonar.organization=ayodeleoladeji

# Source and binary directories
sonar.sources=src/main/java
sonar.tests=src/test/java
sonar.java.binaries=target/classes
sonar.java.test.binaries=target/test-classes
sonar.java.libraries=target/*.jar

# Encoding
sonar.sourceEncoding=UTF-8

# Coverage reports
sonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
sonar.junit.reportPaths=target/surefire-reports

# NOTE: SonarCloud deprecated external SpotBugs import (sonar.java.spotbugs.reportPaths)
# SonarCloud now uses its own built-in security analyzers which cover the same issues:
# - RSPEC-5145: CRLF Injection (similar to SpotBugs CRLF_INJECTION_LOGS)
# - RSPEC-2245: Pseudorandom generators (similar to PREDICTABLE_RANDOM)
# - RSPEC-4275: Locale-sensitive operations (similar to DM_CONVERT_CASE)
# - RSPEC-2076/2077: SQL/Command Injection
# SpotBugs is still run in the workflow for additional validation

# SARIF format for external issue import (if supported)
sonar.externalIssuesReportPaths=target/spotbugs.sarif

# Checkstyle integration
sonar.java.checkstyle.reportPaths=target/checkstyle-result.xml

# PMD integration
sonar.java.pmd.reportPaths=target/pmd.xml

# Exclusions
sonar.exclusions=**/target/**,**/generated/**,**/*.xml,**/*.json,**/*.yml,**/*.yaml

# Coverage exclusions
sonar.coverage.exclusions=**/config/**,**/entity/**,**/dto/**,**/*Application.java,**/*Config.java

# Test exclusions
sonar.test.exclusions=**/*Test.java,**/*Tests.java,**/*IT.java

# Java version
sonar.java.source=21
sonar.java.target=21

# Security analysis
sonar.security.hotspots.enabled=true
sonar.security.taintAnalysis.enabled=true

# Quality gate
sonar.qualitygate.wait=true
sonar.qualitygate.timeout=300
